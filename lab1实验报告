## lab0.5
#### 练习1：使用GDB验证启动流程
为了熟悉使用qemu和gdb进行调试工作,使用gdb调试QEMU模拟的RISC-V计算机加电开始运行到执行应用程序的第一条指令（即跳转到`0x80200000`）这个阶段的执行过程，说明RISC-V硬件加电后的几条指令在哪里？完成了哪些功能？

答：RISC-V 硬件加电后的初始指令从复位地址 `0x1000` 开始。
```
0x1000: auipc	t0,0x0 # 将20位的立即数0x0符号扩展为32位，然后将其加到PC的高20位中，生成一个32位的地址，结果存储到寄存器 t0 中
0x1004:	addi	a1,t0,32 # 将寄存器 t0 的值加上立即数32，结果存储在寄存器 a1 中
0x1008:	csrr	a0,mhartid # 将控制和状态寄存器 mhartid 的值读取并保存当前处理器的 ID 到寄存器 a0 中
0x100c:	ld	t0,24(t0) # 从内存地址 t0 + 24 处加载一个64位的值到寄存器 t0 中，那个地址保存的值就是0x80000000
0x1010:	jr	t0 # 无条件跳转到寄存器 t0 中存储的地址
```
PC 被设置为复位地址 `0x1000`，开始执行复位代码。复位代码执行完成后，将 PC 设置为固件的加载地址 `0x80000000`，开始执行固件代码，并且将操作系统内核加载到内存中的预定位置 `0x80200000`。固件代码执行完成后，将 PC 设置为 `0x80200000`，跳转到操作系统内核的入口点，开始执行内核代码。